#
# Build
#

build { core init gehello drivers/timer lib/trace/policy/rpc_name }
#build { testthread }

create_boot_directory

#
# Generate config
#

install_config {
<config verbose="yes" prio_levels="8">
    <parent-provides>
       <service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
		<service name="TRACE"/>
    </parent-provides>
    <default-route>
        <any-service> <parent/> <any-child/> </any-service>
    </default-route>
 <start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
    <start name="gehello" priority="-2">
        <resource name="RAM" quantum="30M"/>
	<config>
	<trace_policy label="init -> taskmanager" module="rpc_name" />
	</config>
        <provides><service name="GeHello"/></provides>
    </start>
</config>}


#
# Boot image
#

set boot_modules {
        core init
        timer
        gehello
        rpc_name
}
#build_boot_image { core init testthread ld.lib.so }
#build_boot_image { core init timer gehello 
#	rpc_name}

build_boot_image $boot_modules

append qemu_args "-nographic " 

run_genode_until forever
#run_genode_until {child "testthread" exited with exit value .*\n} 20
